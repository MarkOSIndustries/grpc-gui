syntax="proto3";

package msg;

option java_package = "msg.schemas";
option java_outer_classname = "MSG";

import 'google/protobuf/any.proto';

message KafkaRecord {
  string topic = 1;
  int32 partition = 2;
  int64 offset = 3;
  int64 timestamp = 4;
  bytes key = 5;
  bytes value = 6;
}

message TypedKafkaRecord {
  string topic = 1;
  int32 partition = 2;
  int64 offset = 3;
  int64 timestamp = 4;
  bytes key = 5;
  google.protobuf.Any value = 6;
}

service KafkaGRPCBridge {
  rpc consume(ConsumeRequest) returns (stream TypedKafkaRecord);
  rpc offsets(OffsetsRequest) returns (stream OffsetsResponse);
}

message ConsumeRequest {
  string topic = 1;
  string schema = 2;
  oneof from_one_of {
    bool from_earliest = 3;
    bool from_latest = 4;
    int64 from_timestamp = 5;
  }
  oneof until_one_of {
    bool until_latest = 6;
    int64 until_timestamp = 7;
  }
  uint64 limit = 8;
}

message OffsetsRequest {
  string topic = 1;
  int64 timestamp = 2;
}

message OffsetsResponse {
  string topic = 1;
  int32 partition = 2;
  int64 offset = 3;
  int64 timestamp = 4;
}
