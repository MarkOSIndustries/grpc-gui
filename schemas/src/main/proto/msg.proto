syntax="proto3";

package msg;

option java_package = "msg.schemas";
option java_outer_classname = "MSG";

import 'google/protobuf/any.proto';

message KafkaHeader {
  string key = 1;
  bytes value = 2;
}

message KafkaRecord {
  string topic = 1;
  int32 partition = 2;
  int64 offset = 3;
  int64 timestamp = 4;
  bytes key = 5;
  bytes value = 6;
  repeated KafkaHeader headers = 7;
}

message TypedKafkaRecord {
  string topic = 1;
  int32 partition = 2;
  int64 offset = 3;
  int64 timestamp = 4;
  bytes key = 5;
  google.protobuf.Any value = 6;
  repeated KafkaHeader headers = 7;
}

service KafkaGRPCBridge {
  rpc consume(ConsumeRequest) returns (stream TypedKafkaRecord);
  rpc offsets(OffsetsRequest) returns (stream OffsetsResponse);
}

service QueryStore {
  rpc get(GetRequest) returns (GetResponse);
  rpc getKeyCounts(GetKeyCountsRequest) returns (stream GetKeyCountsResponse);
  rpc put(PutRequest) returns (PutResponse);
  rpc scan(ScanRequest) returns (stream GetResponse);
  rpc delete(DeleteRequest) returns (DeleteResponse);
}

message GetRequest {
  bytes key = 1;
  string schema = 2;
}

message GetResponse {
  bytes key = 1;
  google.protobuf.Any value = 2;
}

message GetKeyCountsRequest {
  bytes key_prefix = 1;
  oneof limit_oneof {
      uint64 limit = 2;
      bool unlimited = 3;
    }
}

message GetKeyCountsResponse {
  bytes key = 1;
  uint64 count = 2;
}

message PutRequest {
  bytes key = 1;
  bytes value = 2;
}

message PutResponse {}

message ScanRequest {
  bytes key_prefix = 1;
  string schema = 2;
  oneof limit_oneof {
    uint64 limit = 3;
    bool unlimited = 4;
  }
}

message DeleteRequest {
  bytes key = 1;
}

message DeleteResponse {}

message ConsumeRequest {
  string topic = 1;
  string schema = 2;
  oneof from_one_of {
    bool from_earliest = 3;
    bool from_latest = 4;
    int64 from_timestamp = 5;
  }
  oneof until_one_of {
    bool until_latest = 6;
    int64 until_timestamp = 7;
  }
  oneof limit_oneof {
    uint64 limit = 8;
    bool unlimited = 9;
  }
}

message OffsetsRequest {
  string topic = 1;
  int64 timestamp = 2;
}

message OffsetsResponse {
  string topic = 1;
  int32 partition = 2;
  int64 offset = 3;
  int64 timestamp = 4;
}

message RequestResponsePair {
  google.protobuf.Any request = 1;
  google.protobuf.Any response = 2;
}
